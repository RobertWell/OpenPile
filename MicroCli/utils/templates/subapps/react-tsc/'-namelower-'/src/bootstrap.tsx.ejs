import {App} from './App'
import * as React from 'react';
import {createMemoryHistory, createBrowserHistory, History, LocationListener} from 'history';
import * as ReactDOM from "react-dom";



export interface PayloadInterface {
    onNavigate?: LocationListener,
    defaultHistory?: History,
    initialPath?: string
}


export const mount = (el: HTMLElement, payload: PayloadInterface) => {
    const { onNavigate, defaultHistory} = payload
    const history = defaultHistory || createMemoryHistory();
    if (onNavigate) {
        history.listen(onNavigate);
    }

    ReactDOM.render(<App history={history}/>, el);

    return {
        onParentNavigate({pathname: nextPathname}: { pathname: string }) {
            const {pathname} = history.location;
            if (pathname !== nextPathname) {
                history.push(nextPathname);
            }
        }
    };

}


if (process.env.NODE_ENV === 'development') {
    const devRoot = document.getElementById('_{|{Name|lower}|}-dev-root');
    if (devRoot) mount(devRoot, {
        defaultHistory: createBrowserHistory()
    });
}


